/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package medical;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import static medical.order.back;
import static medical.order_internal.a4;
import static medical.order_internal.a5;
import static medical.order_internal.a6;
import static medical.order_internal.count;
       
/**
 *
 * @author jbj
 */
public class order extends javax.swing.JInternalFrame {
static DefaultTableModel model1=new DefaultTableModel();
//DefaultTableModel model2=new DefaultTableModel();
String[] col_list={"Product name","Company","Quantity"};
    Connection con;
    static Connection con1;
    /**
     * Creates new form order
     */
    public order() {
        initComponents();
        setBounds(0,0, 1500, 680);
        ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
       jPanel1.setBackground(new Color(30, 139, 195));
       jLabel1.add(jLabel4);
      //pack();
       jLabel4.setVisible(true);
        
        //jButton1.setVisible(false);
       //jButton3.setVisible(false);
       jTable1.setModel(model1);
     jTable1.getTableHeader().setFont(new Font("Tahoma", Font.BOLD,18));
model1.setColumnIdentifiers(col_list);
try {   
            Class.forName("com.mysql.jdbc.Driver");
            try {
              con=DriverManager.getConnection("jdbc:mysql://localhost:3306/medical", "root", "");
            } catch (SQLException ex) {
                
            }
           
        } 
       
        catch (ClassNotFoundException ex) {
       JOptionPane.showMessageDialog(rootPane,ex.toString()); 
          
        }
String pname="";
try
{
String str12="select distinct(product_name) from p_brand";
                Statement st=con.createStatement();
                ResultSet re=st.executeQuery(str12);
                
        while(re.next())
        {
            pname=re.getString("product_name");
            jComboBox1.addItem(pname);
        }
                
}
           
catch (SQLException ex) {
                Logger.getLogger(supplier.class.getName()).log(Level.SEVERE, null,ex);
                
            }

        for(int i=1;i<=1000;i++)
        {
            jComboBox2.addItem(i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable()

        {
            public boolean isCellEditable(int row,int col)

            {
                return false;
            }
        }

        ;
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jMenuItem1.setText("Edit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setText("Delete");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(220, 228, 231));
        jPanel1.setLayout(null);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Product  Name");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(350, 190, 140, 22);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Quantity");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(350, 270, 120, 22);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Brand", "Order Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setComponentPopupMenu(jPopupMenu1);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(330, 320, 710, 210);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(30, 139, 195));
        jButton1.setText("Next");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(590, 560, 190, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Company");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(350, 230, 110, 22);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(30, 139, 195));
        jButton2.setText("Add");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(860, 200, 190, 31);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-" }));
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(540, 190, 260, 23);

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-" }));
        jComboBox2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(jComboBox2);
        jComboBox2.setBounds(540, 270, 260, 23);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(30, 139, 195));
        jButton4.setText("Add New Item");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(860, 250, 190, 31);

        jComboBox4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-" }));
        jComboBox4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox4);
        jComboBox4.setBounds(540, 230, 260, 23);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(37, 116, 169));
        jLabel4.setText("ORDER");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(610, 40, 220, 60);

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel7.setText("X");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel7);
        jLabel7.setBounds(1330, 40, 20, 40);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medical/images/order12.PNG"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(1359, 680));
        jLabel1.setMinimumSize(new java.awt.Dimension(1359, 680));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 30, 1370, 700);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, -30, 1400, 1070);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    if(model1.getRowCount()!=0)
    {
        try {
        int rows=jTable1.getRowCount();
        String str="insert into order1_arbt(product_name,o_quantity,brand) values(?,?,?)";
        PreparedStatement pst=con.prepareStatement(str);
        for(int row=0;row<rows;row++)
        {
        String p_name=(String) jTable1.getValueAt(row,0);
           long o_quant =(long) jTable1.getValueAt(row,2);
        String brand=(String) jTable1.getValueAt(row,1);
        
        pst.setString(1, p_name);
        pst.setLong(2, (long) o_quant);
        pst.setString(3,brand);
        pst.addBatch();
            
        }
        pst.executeBatch();


    } catch (SQLException ex) {
        Logger.getLogger(order.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    model1.setRowCount(0);
   order_internal v=new order_internal();
   v.setVisible(true);
    }else
    {
        JOptionPane.showMessageDialog(rootPane,"Please add the items.");
    }
    }//GEN-LAST:event_jButton1ActionPerformed
NewClass n1=new NewClass();
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//jTable1.setModel(model1);
  if(!jComboBox1.getSelectedItem().equals("-Select-")&&!jComboBox2.getSelectedItem().equals("-Select-")&&!jComboBox4.getSelectedItem().equals("-Select-"))
  {
        
n1.get_p_name(jComboBox1.getSelectedItem().toString());
//JOptionPane.showMessageDialog(rootPane,n1.set_p_name() );
n1.get_brand(jComboBox4.getSelectedItem().toString());
//JOptionPane.showMessageDialog(rootPane,n1.set_brand() );
n1.get_oq(Long.parseLong(jComboBox2.getSelectedItem().toString()));
int x=0,i=0;

if(!n1.set_p_name().equals("") && !n1.set_brand().equals("") && !Long.toString(n1.set_oq()).equals(""))
{
    for(i=0;i<model1.getRowCount();i++)
    {
      if( !jComboBox1.getSelectedItem().equals(jTable1.getValueAt(i,0).toString()) || !jComboBox4.getSelectedItem().equals(jTable1.getValueAt(i,1).toString()))
      {
         // JOptionPane.showMessageDialog(rootPane,jTable1.getValueAt(i,0));
          //JOptionPane.showMessageDialog(rootPane,jTable1.getValueAt(i,1));
          x++;
      }
     else
      {
         jTable1.setValueAt(Long.toString(Long.parseLong(jTable1.getValueAt(i, 2).toString())+Long.parseLong(jComboBox2.getSelectedItem().toString())), i, 2);  
         jComboBox1.setSelectedItem("-Select-");
 jComboBox2.setSelectedItem("-Select-");
 jComboBox4.setSelectedItem("-Select-");
         break;
      }
          
    }
   
   

    if(x==model1.getRowCount())
    {
 String str1=n1.set_p_name();
 String str2=n1.set_brand();
 long str3=n1.set_oq();
 Object[] obj={str1,str2,str3};
  model1.addRow(obj);
 
 jComboBox1.setSelectedItem("-Select-");
 jComboBox2.setSelectedItem("-Select-");
 jComboBox4.setSelectedItem("-Select-");
            }
}


  }
else
  {
      JOptionPane.showMessageDialog(rootPane,"Select the details properly");
  }
        
// jTable1.setEnabled(false);
  

 jTable1.setRowSelectionAllowed(true);
       jTable1.setColumnSelectionAllowed(false);
   

// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    
    public static void back()        
{ 
   
     String[] col_list={"Product name","Brand","Quantity"};
    model1.setColumnIdentifiers(col_list);
    try
    {
         
       // String str="select product_name,brand,o_quantity from order1_arbt";
        
      // Statement st;
        //st = con1.createStatement();
      //ResultSet re=st.executeQuery(str);
        
     // while(re.next())
      //{
            int col_count=col_list.length;
           
            for(int i=0;i<count;i++)
            {
               Object[] new_row={a4[i],a6[i],a5[i]};
//new_row[i]=re.getObject(i+1);
               // model2.addColumn("Product name", a1[i]);
             model1.addRow(new_row);
            }
         
       // }
        
        
    }
    catch(Exception ex)
    {
        //JOptionPane.showMessageDialog(rootPane, ex.toString());
    }
    
    
    
}

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
//jButton2.setVisible(false);
//jButton3.setLocation(jButton2.getLocation());
//jButton3.setVisible(true);
      //  jTable1.setEnabled(true);
       // jTable1.setEditingColumn(2);
//jTextField1.setText(model1.getValueAt(jTable1.getSelectedRow(), 0).toString());
//jTextField2.setText(model1.getValueAt(jTable1.getSelectedRow(), 2).toString());  
//jTextField3.setText(model1.getValueAt(jTable1.getSelectedRow(), 1).toString()); 
int row=jTable1.getSelectedRow();
        jComboBox1.setSelectedItem(jTable1.getValueAt(row,0));
        jComboBox4.setSelectedItem(jTable1.getValueAt(row,1));
        //jComboBox3.setSelectedItem(jTable2.getValueAt(row,2));
        model1.removeRow(row);



// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    public void get(javax.swing.JComboBox c,String x)
    {
       /* int count=0;
        for(int i=0;i<c.getItemCount();i++)
 {
     if(!c.getItemAt(i).toString().equals(x))
     {
         count++;
     }
 ///jComboBox4.addItem(brand.getText());
 }
        if(count==c.getItemCount())
            c.addItem(x);*/
        
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        add_item();
    }//GEN-LAST:event_jButton4ActionPerformed
public void add_item()
{
    jComboBox1.setSelectedItem("-Select-");
jComboBox2.setSelectedItem("-Select-");
jComboBox4.setSelectedItem("-Select-");
        try {
        JPanel p=new JPanel();
        JTextField product_name=new JTextField(10);
        JTextField brand=new JTextField(10);
       JLabel j1= new JLabel("Product Name");
        p.add(j1);
        j1.setFont(new Font("Tahoma",Font.BOLD,12));
        p.add(product_name);
        JLabel j2=new JLabel("  Company");
        p.add(j2);
        j2.setFont(new Font("Tahoma",Font.BOLD,12));
        p.add(brand);
          ImageIcon icon=new ImageIcon("rx1.png");
                    
   int op=  JOptionPane.showConfirmDialog(rootPane,p,"Add New Product",JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE,icon);
        if(op==0 )
        {
            if(!product_name.getText().equals("") && !brand.getText().equals(""))
   
        {
        String str1="select product_name,brand from p_brand where product_name='"+product_name.getText()+"' and brand='"+brand.getText()+"'";
        Statement st;
       st = con.createStatement();
       ResultSet rs=st.executeQuery(str1);
     
       if(!rs.next())
      
       {
        String str= "insert into p_brand(product_name,brand) values('"+product_name.getText()+"','"+brand.getText()+"')";
        
        
        st.executeUpdate(str); 
       }
       else
       {
           JOptionPane.showMessageDialog(rootPane,"Item already exists.");
       }
        
         int count=0;  
        for(int i=0;i<jComboBox1.getItemCount();i++)
    {
        if(!jComboBox1.getItemAt(i).equals(product_name.getText()))
        {
            count++;
        }
        }
       if(count==jComboBox1.getItemCount())
          
       {jComboBox1.addItem(product_name.getText());}
        }
            else
            {
                JOptionPane.showMessageDialog(rootPane,"Enter Product name and Company!");
          //JOptionPane.showConfirmDialog(rootPane,p,"Add New Product",JOptionPane.OK_CANCEL_OPTION);
                    add_item();
            }
        }
        
        
       /*else
       {
           JOptionPane.showMessageDialog(rootPane, "item already exists");
       }*/

       /* String pname="";
try
{
    //jComboBox1.removeAllItems();
    //     jComboBox1.setSelectedItem("-Select-");
String str12="select distinct(product_name) from p_brand";
               
      jComboBox1.setSelectedItem("-Select-");
         ResultSet re=st.executeQuery(str12);
         jComboBox1.removeAllItems();
        while(re.next())
        {
            pname=re.getString("product_name");
            jComboBox1.addItem(pname);
        }
                
}
           
catch (SQLException ex) {
                Logger.getLogger(supplier.class.getName()).log(Level.SEVERE, null,ex);
                
            }*/
// TODO add your handling code here:
    } catch (SQLException ex) {
        Logger.getLogger(order.class.getName()).log(Level.SEVERE, null, ex);
    }

}
    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        jComboBox4.removeAllItems();
        jComboBox4.addItem("-Select-");
        try
{
String str12="select brand from p_brand where product_name='"+jComboBox1.getSelectedItem().toString()+"'";
                Statement st=con.createStatement();
                ResultSet re=st.executeQuery(str12);
        while(re.next())
        {
            jComboBox4.addItem(re.getString("brand"));
        }
                
            }
            
            catch (SQLException ex) {
                Logger.getLogger(supplier.class.getName()).log(Level.SEVERE, null,ex);
                
            }

    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        int row=jTable1.getSelectedRow();
        //jComboBox1.setSelectedItem(jTable1.getValueAt(row,0));
        //jComboBox4.setSelectedItem(jTable1.getValueAt(row,1));
        //jComboBox3.setSelectedItem(jTable2.getValueAt(row,2));
        model1.removeRow(row);

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
       jComboBox1.setSelectedItem("-Select-");
 jComboBox2.setSelectedItem("-Select-");
 jComboBox4.setSelectedItem("-Select-");
       model1.setRowCount(0);
        this.dispose();
    }//GEN-LAST:event_jLabel7MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
