/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package medical;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import medical.NewClass;
import medical.bill;
import medical.order;
import medical.order_internal;
import medical.supplier;

/**
 *
 * @author jbj
 */
public class sales_bill1 extends javax.swing.JInternalFrame {
DefaultTableModel model1=new DefaultTableModel();
String[] col_list={"Product","Company","Quantity","Amount"};
    Connection con;
    /**
     * Creates new form sales_bill1
     */
    public sales_bill1() {
        initComponents();
        setBounds(0,0, 1365, 680);
        jPanel1.setBackground(Color.WHITE);
        jTable2.setModel(model1);
        ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
        jTable2.getTableHeader().setFont(new Font("Tahoma", Font.BOLD,18));
         try {
                 Class.forName("com.mysql.jdbc.Driver");
                 try {
                     con=DriverManager.getConnection("jdbc:mysql://localhost:3306/medical", "root", "");
                 } catch (SQLException ex) {
                     
                 }
                 
             }
             
             catch (ClassNotFoundException ex) {
                 JOptionPane.showMessageDialog(rootPane,ex.toString());
                 
             }
             
        Date date=new Date();
        DateFormat df=new SimpleDateFormat("dd/MM/yyyy");
        String fmd=df.format(date);
        jLabel5.setText(fmd);
        String sql="select distinct(product_name) from inventory";
             try
             {
                 Statement st=con.createStatement();
                 //jComboBox1.removeAllItems();
                 
                 ResultSet r=st.executeQuery(sql);
                 while(r.next())
                 {
                     jComboBox1.addItem(r.getString("product_name"));
            
                  }
    }
    catch(Exception e)
    {
        JOptionPane.showMessageDialog(rootPane,e.toString());
    }
    
            model1.setColumnIdentifiers(col_list);
            for(int i=1;i<=1000;i++)
        {
            jComboBox3.addItem(i);
        }
           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable()
        {
            public boolean isCellEditable(int row,int col)
            {
                return false;
            }
        }
        ;
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jMenuItem1.setText("Edit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setBorder(null);
        setClosable(true);
        setMaximizable(true);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(null);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(1090, 180, 170, 30);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(1090, 130, 170, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Date:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(1080, 80, 80, 20);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(jLabel5);
        jLabel5.setBounds(1170, 80, 120, 20);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(jLabel4);
        jLabel4.setBounds(800, 70, 150, 20);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(800, 120, 260, 28);

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-" }));
        jPanel1.add(jComboBox2);
        jComboBox2.setBounds(800, 160, 260, 28);

        jComboBox3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-" }));
        jPanel1.add(jComboBox3);
        jComboBox3.setBounds(800, 200, 260, 28);

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Quantity", "Amount"
            }
        ));
        jTable2.setComponentPopupMenu(jPopupMenu1);
        jTable2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(580, 270, 690, 180);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("TOTAL AMOUNT:");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(700, 490, 210, 30);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("-");
        jLabel9.setToolTipText("");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(940, 490, 190, 20);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setText("Confirm");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(810, 540, 200, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Bill No. :");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(580, 70, 140, 20);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Select Product:");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(580, 120, 190, 20);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Select Company:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(580, 160, 190, 20);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("Quantity:");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(580, 200, 140, 20);

        jLabel12.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel12.setText("X");
        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel12);
        jLabel12.setBounds(1330, 10, 20, 40);

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medical/images/Capture16.PNG"))); // NOI18N
        jPanel1.add(jLabel7);
        jLabel7.setBounds(0, 0, 1380, 700);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1400, 1000);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
         long l1=0;
         int c=0;
        if(!jComboBox3.getSelectedItem().equals("-Select-")&&!jComboBox1.getSelectedItem().equals("-Select-")&&!jComboBox2.getSelectedItem().equals("-Select-"))
        {
            for(int row=0;row<jTable2.getRowCount();row++)
            {  
            if(!jTable2.getValueAt(row, 0).toString().equals(jComboBox1.getSelectedItem())&&!jTable2.getValueAt(row, 1).toString().equals(jComboBox2.getSelectedItem()))
            {
                c++;
            }
            }
            if(c==jTable2.getRowCount())
            {
               
            
                
                //long l2=r12.getLong("stock_quantity")-Long.parseLong(stock.toString());
                
                try {
                    String str4="select stock_quantity from inventory where product_name='"+jComboBox1.getSelectedItem().toString()+"' and brand='"+jComboBox2.getSelectedItem()+"'";
                    Statement st=con.createStatement();
                    ResultSet r1=st.executeQuery(str4);
                    r1.next();
                    l1=r1.getLong("stock_quantity");
                } catch (SQLException ex) {
                    Logger.getLogger(sales_bill1.class.getName()).log(Level.SEVERE, null, ex);
                }
                if(Long.parseLong(jComboBox3.getSelectedItem().toString())<=l1&&l1>0)
                {
                    
                    
                    try {
                        String str1=jComboBox1.getSelectedItem().toString();
                        String str2=jComboBox3.getSelectedItem().toString();
                        String str4=jComboBox2.getSelectedItem().toString();
                        String str="select s_price from inventory where product_name='"+str1+"' and brand='"+str4+"'";
                        Statement st=con.createStatement();
                        ResultSet r =st.executeQuery(str);
                        r.next();
                        Long str3=r.getLong("s_price")*Long.parseLong(str2);
                        //JOptionPane.showMessageDialog(rootPane,"s="+str3);
                        Object[] obj={str1,str4,str2,str3.toString()};
                        model1.addRow(obj);
                        
                        
                    } catch (SQLException ex) {
                        Logger.getLogger(sales_bill1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    jComboBox1.setSelectedItem("-Select-");
                    jComboBox3.setSelectedItem("-Select-");
                    jComboBox2.setSelectedItem("-Select-");
                    
                    
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"stock quantity is " +l1);
                    jComboBox3.setSelectedItem("-Select-");
                }
           
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "Product is already added.");
                jComboBox3.setSelectedItem("-Select-");
                jComboBox1.setSelectedItem("-Select-");
                jComboBox2.setSelectedItem("-Select-");
            }
        }
    
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Enter the Details properly.");
        }
       
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(model1.getRowCount()!=0)
        {
            int op=JOptionPane.showConfirmDialog(rootPane, "Do you really want to Confirm?", "Confirmation", JOptionPane.OK_CANCEL_OPTION);
        if(op==0)
        {
        try {
        long sum=0,sum1=0;
        for(int i=0;i<model1.getRowCount();i++)
        {
            sum=sum+Long.parseLong(model1.getValueAt(i, 3).toString());
            sum1=sum1+Long.parseLong(model1.getValueAt(i, 2).toString());
        }
        jLabel9.setText(Long.toString(sum));
        String str1="insert into bill (`date_`, `st_quantity`, `total_amount`) values('"+jLabel5.getText()+"','"+Long.toString(sum1)+"','"+jLabel9.getText()+"')";
        Statement st= con.createStatement();
        st.executeUpdate(str1);
        try
                {
                    String str2="SELECT max(`bill_no`) FROM `bill` ";
                    //Statement st=con.createStatement();
                    
                    ResultSet r=st.executeQuery(str2);
                    r.next();
                    jLabel4.setText(Long.toString(r.getLong(1)));
                }
                
                catch (SQLException ex) {
                    Logger.getLogger(order_internal.class.getName()).log(Level.SEVERE, null,ex);
                    
                }
    } catch (SQLException ex) {
        Logger.getLogger(sales_bill1.class.getName()).log(Level.SEVERE, null, ex);
    }
     try {
        int rows=jTable2.getRowCount();
        String str="insert into bill_detail (product_name,brand,spp_quantity,s_price) values(?,?,?,?)";
        PreparedStatement pst=con.prepareStatement(str);
        for(int row=0;row<rows;row++)
        {
        String p_name=(String) jTable2.getValueAt(row,0);
        Long spp_quant = Long.parseLong(jTable2.getValueAt(row,2).toString());
        Long sp= Long.parseLong(jTable2.getValueAt(row,3).toString())/spp_quant;
        String brand=(String) jTable2.getValueAt(row, 1);
        pst.setString(1, p_name);
        pst.setLong(3,  spp_quant);
        pst.setString(4,sp.toString());
        pst.setString(2, brand);
        pst.addBatch();
            
        }
        pst.executeBatch();

        String str4="UPDATE `bill_detail` SET `bill_no`='"+jLabel4.getText()+"' WHERE bill_no is null" ;
                Statement st2=con.createStatement();
                st2.executeUpdate(str4);
            

    } catch (SQLException ex) {
        Logger.getLogger(order.class.getName()).log(Level.SEVERE, null, ex);
    }
    
            for(int i=0;i<jTable2.getRowCount();i++)
            {
                String prod_name=jTable2.getValueAt(i,0).toString();
                
                Object stock=jTable2.getValueAt(i,2);
               String brand=(String) jTable2.getValueAt(i, 1);
                    
              
                try{
                String str12="select stock_quantity from inventory where product_name='"+prod_name+"' and brand='"+brand+"'";
                Statement st12=con.createStatement();
                ResultSet r12=st12.executeQuery(str12); 
               r12.next();
                
                   long l2=r12.getLong("stock_quantity")-Long.parseLong(stock.toString());
               
                   String ste13="update inventory set stock_quantity="+l2+" where product_name='"+prod_name+"' and brand='"+brand+"'";  
                  st12.executeUpdate(ste13);
                 
               
                } catch (SQLException ex) {
            Logger.getLogger(sales_bill1.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
        NewClass n1=new NewClass();
        n1.get_bill_no(jLabel4.getText());
         n1.get_date(jLabel5.getText());
          n1.get_total(Long.parseLong(jLabel9.getText()));
          new bill().setVisible(true);
          model1.setRowCount(0);
          jLabel9.setText("");
          jLabel4.setText("");
        }
        
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Select the items");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
       if(jTable2.getSelectedRows().length!=0)
       {
           int[] rows=jTable2.getSelectedRows();
        //for(Object b: jTable2.getSelectedRows())
     
          // model1.removeRow(Integer.parseInt(b.toString()));
           for( int i=0;i<rows.length;i++)
               
           {
              model1.removeRow(rows[i]-i);
           }
       }
       else
       {
           JOptionPane.showMessageDialog(rootPane,"please select rows");
       }
       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        jComboBox2.removeAllItems();
        jComboBox2.addItem("-Select-");
        try
{
String str12="select brand from p_brand where product_name='"+jComboBox1.getSelectedItem().toString()+"'";
                Statement st=con.createStatement();
                ResultSet re=st.executeQuery(str12);
        while(re.next())
        {
            jComboBox2.addItem(re.getString("brand"));
        }
                
            }
            
            catch (SQLException ex) {
                Logger.getLogger(supplier.class.getName()).log(Level.SEVERE, null,ex);
                
            }

    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        int row=jTable2.getSelectedRow();
        jComboBox1.setSelectedItem(jTable2.getValueAt(row,0));
        jComboBox2.setSelectedItem(jTable2.getValueAt(row,1));
        //jComboBox3.setSelectedItem(jTable2.getValueAt(row,2));
        model1.removeRow(row);
       // jTable2.removeRowSelectionInterval(row, row);
       /* jTable2.setValueAt(jComboBox1.getSelectedItem(), row, 0);
        jTable2.setValueAt(jComboBox2.getSelectedItem(), row, 1);
        jTable2.setValueAt(jComboBox3.getSelectedItem(), row, 2);
       */ 
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jLabel12MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
