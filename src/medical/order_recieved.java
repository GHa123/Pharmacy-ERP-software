/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package medical;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jbj
 */
public class order_recieved extends javax.swing.JInternalFrame {
DefaultTableModel model1=new DefaultTableModel();
String[] col_list={"Product name","Company","Quantity","Received Quantity","Price"};
    Connection con;
    /**
     * Creates new form order_recieved
     */
    ArrayList l=new ArrayList();
    public order_recieved() {
        initComponents();
        setBounds(0,0, 1365, 680);
         ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
       jPanel1.setBackground(new Color(51,51, 51));
        jTable1.setModel(model1);
        jTable1.getTableHeader().setFont(new Font("Tahoma", Font.BOLD,18));
        model1.setColumnIdentifiers(col_list);
             try {
                 Class.forName("com.mysql.jdbc.Driver");
                 try {
                     con=DriverManager.getConnection("jdbc:mysql://localhost:3306/medical", "root", "");
                 } catch (SQLException ex) {
                     
                 }
                 
             }
             
             catch (ClassNotFoundException ex) {
                 JOptionPane.showMessageDialog(rootPane,ex.toString());
                 
             }
              try {           
             
             String str1="select * from arraylist";
             Statement st11=con.createStatement();
             ResultSet r11=st11.executeQuery(str1);
             while(r11.next())
             {
                 Long str=r11.getLong("order_no");
                 l.add(str.toString());
                //JOptionPane.showMessageDialog(rootPane,str);
             
             }
             
             String sql="select distinct(order_no) from order1";
             //String sql="select order_no from arraylist";
             try
             {
                 Statement st=con.createStatement();
                 //jComboBox1.removeAllItems();
                 int i=0,count=0;
                 ResultSet r=st.executeQuery(sql);
                
                    while(r.next())
                    {
                        count=0;
                         for(i=0;i<l.size();i++)
                 {
                     if(!r.getString("order_no").equals(l.get(i)))
                     {
                    count++;
                     }
                     else 
                     {
                         break;
                     }
                 }
                   if(count==l.size()){
                            jComboBox1.addItem(r.getString("order_no"));
                     }  
                 }
    }
    catch(Exception e)
    {
        JOptionPane.showMessageDialog(rootPane,e.toString());
    }
        
    }
    
    catch (SQLException ex) {
        Logger.getLogger(order_recieved.class.getName()).log(Level.SEVERE, null,ex);
        
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable()
        {
            public boolean isCellEditable(int rowIndex,int colIndex)
            {
                return colIndex==4 || colIndex==3;

            }
        }
        ;
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setClosable(true);
        setMaximizable(true);
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(30, 130, 76));
        jLabel1.setText("ORDER RECIEVED");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(500, 10, 360, 40);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(30, 130, 76));
        jLabel2.setText("Order No");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(390, 110, 130, 30);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(540, 110, 280, 30);

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(30, 130, 76));
        jButton1.setText("OK");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(860, 110, 120, 30);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTable1FocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(260, 220, 870, 200);

        jButton2.setBackground(new java.awt.Color(204, 204, 204));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(30, 130, 76));
        jButton2.setText("Update");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(590, 460, 140, 30);

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel7.setText("X");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel7);
        jLabel7.setBounds(1310, 10, 20, 40);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medical/images/Capture3.PNG"))); // NOI18N
        jLabel3.setText("jLabel3");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(0, 0, 1350, 690);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1630, 850);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            //jTable1.setRowSelectionAllowed(true);
        if(!jComboBox1.getSelectedItem().equals("-Select-"))
        {
        try {
        model1.setRowCount(0);
        
        String str="select product_name,brand,o_quantity from order1 where order_no='"+jComboBox1.getSelectedItem().toString()+"'";
        Statement st=con.createStatement();
        ResultSet r=st.executeQuery(str);
        
       
         
    model1.setColumnIdentifiers(col_list);
        while(r.next())
        {
             int col_count=col_list.length-2;
            Object[] new_row=new Object[col_count];
            for(int i=0;i<col_count;i++)
            {
                new_row[i]=r.getObject(i+1);
              
        }
            model1.addRow(new_row);
           
           jTable1.setRowSelectionAllowed(false);  
        }
    
     //jTable1.setEnabled(false);
     
      jTable1.setEditingColumn(3);
      jTable1.setEditingColumn(4);
       
      //  jTable1.setEditingColumn(3);
    
  
       
    } catch (SQLException ex) {
        Logger.getLogger(order_recieved.class.getName()).log(Level.SEVERE, null, ex);
    }
        
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane,"Select the order number.");
        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed
boolean flag=false;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 int x=0;
        if(!jComboBox1.getSelectedItem().equals("-Select-"))
        {
            
            for(int i=0;i<model1.getRowCount();i++)
            {
               // JOptionPane.showMessageDialog(rootPane,model1.getValueAt(i, 3) );
                String a1=(String) jTable1.getValueAt(i, 3);
                String a2=(String) jTable1.getValueAt(i, 4);
                if(a1!=null && a2!=null )
                {
                    x++;
                }
                else
                {
                    break;
                }
            }
            if(x==model1.getRowCount())
            {
                
            
        
            
            
           /* String s1="select o_quantity from order1 where order_no='"+jComboBox1.getSelectedItem().toString()+"'";
          Statement v=con.createStatement();
            ResultSet rw=v.executeQuery(s1);*/
            int row=0,count=0;
            while(row<model1.getRowCount())
            {
                int a=Integer.parseInt(jTable1.getValueAt(row,3).toString());
                int b=Integer.parseInt(jTable1.getValueAt(row,2).toString());
                if(a<=b)
                {
                    count++;
                }
                else
                {
                    break;
                }
                row++;
            }
           if(count==model1.getRowCount()) 
           {
                
             try
             {
                 
                 //else
                 for(int i=0;i<l.size();i++)
                 {
                     //JOptionPane.showMessageDialog(rootPane, l.get(i));
                     if(l.get(i).equals(jComboBox1.getSelectedItem().toString()))
                     {
                         flag=true;
                         
                     }
                 } 
                 if(flag==false)
                 {
                     
                     for(int i=0;i<jTable1.getRowCount();i++)
                     {
                         String prod_name=jTable1.getValueAt(i,0).toString();
                         String brand=jTable1.getValueAt(i,1).toString();
                         Object rec=jTable1.getValueAt(i,3);
                         Object c_price=jTable1.getValueAt(i,4);
                         
                         boolean flag1=false;
                         try{
                             String str12="select product_name,brand from inventory where product_name='"+prod_name+"' and brand='"+brand+"'";
                             Statement st12=con.createStatement();
                             ResultSet r12=st12.executeQuery(str12);
                             while(r12.next()&&flag1==false)
                             {
                                 if(!r12.getString("product_name").equals("") && !r12.getString("brand").equals(""))
                                 {
                                     flag1=true;
                                     String str14="select stock_quantity from inventory where product_name='"+prod_name+"'";
                                     Statement st14=con.createStatement();
                                     ResultSet r14=st14.executeQuery(str14);
                                     r14.next();
                                     Long str15=r14.getLong("stock_quantity");
                                     Long sum=str15+Long.parseLong(rec.toString());
                                     String str13="update inventory set stock_quantity="+sum+" where product_name='"+prod_name+"'";
                                     st14.executeUpdate(str13);
                                     
                                 }
                             }
                             if(flag1==false)
                             {
                                 
                                 try {
                                     
                                     String str="insert into inventory (product_name,brand,stock_quantity,s_price) values('"+prod_name+"','"+brand+"',"+rec+","+c_price+")";
                                     Statement st=con.createStatement();
                                     st.executeUpdate(str);
                                 }
                                 
                                 catch (SQLException ex) {
                                     Logger.getLogger(order_recieved.class.getName()).log(Level.SEVERE, null, ex);
                                 }
                                 
                             }
                         }
                         catch(Exception ex)
                         {
                             JOptionPane.showMessageDialog(rootPane, ex.toString());
                         }
                         
                         
                     }
                     try {
                         
//l.add(jComboBox1.getSelectedItem());
                         String str1="insert into arraylist (order_no) values('"+jComboBox1.getSelectedItem().toString()+"')";
                         Statement st=con.createStatement();
                         st.executeUpdate(str1);
                         
                         
                     } catch (SQLException ex) {
                         Logger.getLogger(order_recieved.class.getName()).log(Level.SEVERE, null, ex);
                     }
                     l.clear();
                     try {
                         
                         String str3="select * from arraylist";
                         Statement st11=con.createStatement();
                         ResultSet r11=st11.executeQuery(str3);
                         while(r11.next())
                         {
                             Long str=r11.getLong("order_no");
                             l.add(str.toString());
                             // JOptionPane.showMessageDialog(rootPane,str);
                             
                         }
                         
                         
                     }   catch (SQLException ex) {
                         Logger.getLogger(order_recieved.class.getName()).log(Level.SEVERE, null, ex);
                     }
                 }
                 if(flag==true)
                 {
                     int op=JOptionPane.showConfirmDialog(rootPane,"Do you want to update the existing product information?", "Confirmation", JOptionPane.YES_NO_OPTION);  
                     if(op==0)
                     {
                         for(int i=0;i<jTable1.getRowCount();i++)
                         {
                             try {
                                 String prod_name=jTable1.getValueAt(i,0).toString();
                                 String brand=jTable1.getValueAt(i,1).toString();
                                 Object rec=jTable1.getValueAt(i,3);
                                 Object c_price=jTable1.getValueAt(i,4);
                                 String str="update inventory set brand='"+brand+"',stock_quantity="+rec+",s_price="+c_price+" where product_name='"+prod_name+"'";
                                 Statement st111=con.createStatement();
                                 st111.executeUpdate(str);
                             }
                             
                             catch (SQLException ex) {
                                 Logger.getLogger(order_recieved.class.getName()).log(Level.SEVERE, null, ex);
                             }
                         }
                         
                     }
                     
                     flag=false;
                     
                 }
                 
                 jComboBox1.removeAllItems();
                 jComboBox1.addItem("-SELECT-");
                 String str1="select * from arraylist";
                 Statement st11=con.createStatement();
                 ResultSet r11=st11.executeQuery(str1);
                 while(r11.next())
                 {
                     Long str=r11.getLong("order_no");
                     l.add(str.toString());
                     //JOptionPane.showMessageDialog(rootPane,str);
                     
                 }
                 
                 String sql="select distinct(order_no) from order1";
                 //String sql="select order_no from arraylist";
                 try
                 {
                     Statement st=con.createStatement();
                     //jComboBox1.removeAllItems();
                     int i=0,count1=0;
                     ResultSet r=st.executeQuery(sql);
                     
                     while(r.next())
                     {
                         count1=0;
                         for(i=0;i<l.size();i++)
                         {
                             if(!r.getString("order_no").equals(l.get(i)))
                             {
                                 count1++;
                             }
                             else
                             {
                                 break;
                             }
                         }
                         if(count1==l.size()){
                             jComboBox1.addItem(r.getString("order_no"));
                         }
                     }
                 }
                 catch(Exception e)
                 {
                     JOptionPane.showMessageDialog(rootPane,e.toString());
                 }
                 
                 jComboBox1.setSelectedItem("-SELECT-");
                 model1.setRowCount(0);
                 
             }
                  catch(SQLException ex)
    {
                    Logger.getLogger(order_recieved.class.getName()).log(Level.SEVERE, null,ex);
    }
                
           }
           else
                {
                    JOptionPane.showMessageDialog(rootPane, "Enter received items properly.");
                }
        }
            else
            {
                JOptionPane.showMessageDialog(rootPane,"Enter all the values");
            }
        }
           else
           {
               JOptionPane.showMessageDialog(rootPane, "Select the order number.");
           }
        
        
        
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTable1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusLost

//JOptionPane        
// TODO add your handling code here:
    }//GEN-LAST:event_jTable1FocusLost

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jLabel7MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
