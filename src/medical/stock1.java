/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package medical;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Panel;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jbj
 */
public class stock1 extends javax.swing.JInternalFrame {
DefaultTableModel model1=new DefaultTableModel();
DefaultTableModel model2=new DefaultTableModel();
    Connection con;
   String[] col_list={"Product name","Company","Stock Quantity","Selling Price","Minimum Value"}; 
    /**
     * Creates new form stock1
     */
    public stock1() {
       // this.setAlwaysOnTop(true);
       // this.setResizable(false);
        // s=new stock1();
      // this.setLayout(new GridBagLayout());
      // add(this,new GridBagConstraints());
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
    //    Toolkit scn=Toolkit.getDefaultToolkit();
      // int x=(int) scn.getScreenSize().getWidth();
       //int y=(int) scn.getScreenSize().getHeight();
       //stock1.set;
         //  Toolkit tk=Toolkit.getDefaultToolkit();
        //this.setSize((int)tk.getScreenSize().getWidth(),(int)tk.getScreenSize().getHeight());
        
       setBounds(0,0, 1365, 680);
       this.getContentPane().setBackground(Color.white);
       //UIManager.put("JTabbedPane.selectHighlight", Color.RED);
       
     jTable1.setModel(model1);
     model1.setColumnIdentifiers(col_list);
         jTable1.getTableHeader().setFont(new Font("Tahoma", Font.BOLD,18));
          jTable2.getTableHeader().setFont(new Font("Tahoma", Font.BOLD,18));
             try {
                 Class.forName("com.mysql.jdbc.Driver");
                 try {
                     con=DriverManager.getConnection("jdbc:mysql://localhost:3306/medical", "root", "");
                 } catch (SQLException ex) {
                     
                 }
                 
             }
             
             catch (ClassNotFoundException ex) {
                 JOptionPane.showMessageDialog(rootPane,ex.toString());
                 
             }
        String sql="select distinct(product_name) from inventory";
             try
             {
                 Statement st=con.createStatement();
                 //jComboBox1.removeAllItems();
                 
                 ResultSet r=st.executeQuery(sql);
                 while(r.next())
                 {
                     jComboBox1.addItem(r.getString("product_name"));
            
        }
    }
    catch(Exception e)
    {
        JOptionPane.showMessageDialog(rootPane,e.toString());
    }
             //jButton1.setVisible(false);
             
             
             jTable2.setModel(model2);
             try {
        model2.setRowCount(0);
        String[] col_list11={"Product name","Company","Minimum Value"};
        String str="select `product_name`, `brand`,`min_level` from inventory where min_level is null";
        Statement st=con.createStatement();
        ResultSet r=st.executeQuery(str);
        
       
         
    model2.setColumnIdentifiers(col_list11);
        while(r.next())
        {
             int col_count=col_list11.length;
            Object[] new_row=new Object[col_count];
            for(int i=0;i<col_count;i++)
            {
                new_row[i]=r.getObject(i+1);
              
        }
            model2.addRow(new_row);
           
           jTable2.setRowSelectionAllowed(false);  
        }
        
    } catch (SQLException ex) {
        Logger.getLogger(stock1.class.getName()).log(Level.SEVERE, null, ex);}
        
       int count=jTabbedPane1.getTabCount();
       //JOptionPane.showMessageDialog(rootPane,count);

 if(jTabbedPane1.getTitleAt(0).equals(NewMDIApplication.name1))
         {
            // JOptionPane.showMessageDialog(rootPane,"0");
              jTabbedPane1.setSelectedIndex(0);
         }
         
if(jTabbedPane1.getTitleAt(1).equals(NewMDIApplication.name1))
         {
           //  JOptionPane.showMessageDialog(rootPane,"1");
             jTabbedPane1.setSelectedIndex(count-1);
         }
              
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable()
        {
            public boolean isCellEditable(int rowIndex,int colIndex)
            {
                return false;
            }
        }
        ;
        jLabel7 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable()
        {
            public boolean isCellEditable(int row,int col)
            {
                return col==2;
            }

        }
        ;
        jLabel8 = new javax.swing.JLabel();

        setBorder(null);
        setClosable(true);
        getContentPane().setLayout(null);

        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(42, 187, 155));
        jLabel1.setText("            STOCK");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(460, 30, 350, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(42, 187, 155));
        jLabel3.setText("Product Name");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(270, 120, 220, 20);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(520, 110, 240, 30);

        jButton5.setBackground(new java.awt.Color(42, 187, 155));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(820, 110, 170, 30);

        jButton6.setBackground(new java.awt.Color(42, 187, 155));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("View Stock");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(520, 230, 240, 30);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(250, 290, 860, 240);

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("X");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel7);
        jLabel7.setBounds(1310, 10, 20, 40);

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-" }));
        jPanel1.add(jComboBox2);
        jComboBox2.setBounds(520, 170, 240, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(42, 187, 155));
        jLabel4.setText("Company");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(270, 180, 220, 20);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medical/images/view_stock.PNG"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(-1, 0, 1370, 680);

        jTabbedPane1.addTab("View Stock", jPanel1);

        jPanel2.setBackground(new java.awt.Color(42, 187, 155));
        jPanel2.setLayout(null);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Set the Quantities");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(530, 530, 270, 30);

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(60, 60, 1220, 440);

        jLabel8.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("X");
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel8);
        jLabel8.setBounds(1300, 10, 20, 40);

        jTabbedPane1.addTab("Set Minimum Quantity", jPanel2);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(10, 0, 1350, 760);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        if(!jComboBox1.getSelectedItem().equals("-Select-") && !jComboBox2.getSelectedItem().equals("-Select-") )
        {
            
        try {
        model1.setRowCount(0);
        //String[] col_list={"Product name","Brand","Stock Quantity","Selling Price","Minimum Value"};
        String str="select `product_name`, `brand`, `stock_quantity`,  `s_price`,`min_level` from inventory where product_name='"+jComboBox1.getSelectedItem().toString()+"' and brand='"+jComboBox2.getSelectedItem().toString()+"'";
        Statement st=con.createStatement();
        ResultSet r=st.executeQuery(str);
        
       
         
    model1.setColumnIdentifiers(col_list);
        while(r.next())
        {
             int col_count=col_list.length;
            Object[] new_row=new Object[col_count];
            for(int i=0;i<col_count;i++)
            {
                new_row[i]=r.getObject(i+1);
              
        }
            model1.addRow(new_row);
           
           jTable1.setRowSelectionAllowed(false);  
        }
        
       jTable1.setEnabled(false);
    } catch (SQLException ex) {
        Logger.getLogger(stock1.class.getName()).log(Level.SEVERE, null, ex);
    }
        jComboBox1.setSelectedItem("-Select-");
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Select the product name.");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        jTable1.setEnabled(true);
        try {
        model1.setRowCount(0);
        String[] col_list={"Product name","Brand","Stock Quantity","Selling Price","Minimum Value"};
        String str="select `product_name`, `brand`, `stock_quantity`, `s_price`,`min_level` from inventory";
        Statement st=con.createStatement();
        ResultSet r=st.executeQuery(str);
        
       
         
    model1.setColumnIdentifiers(col_list);
        while(r.next())
        {
             int col_count=col_list.length;
            Object[] new_row=new Object[col_count];
            for(int i=0;i<col_count;i++)
            {
                new_row[i]=r.getObject(i+1);
              
        }
            model1.addRow(new_row);
           
           jTable1.setRowSelectionAllowed(false);  
        }
        
    } catch (SQLException ex) {
        Logger.getLogger(stock1.class.getName()).log(Level.SEVERE, null, ex);}
        //jButton1.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int x=0;
         for(int i=0;i<model2.getRowCount();i++)
            {
               // JOptionPane.showMessageDialog(rootPane,model1.getValueAt(i, 3) );
                String a1=(String)jTable2.getValueAt(i, 2);
                
                if(a1!=null)
                {
                    x++;
                }
                else
                {
                    break;
                }
            }
            if(x==model2.getRowCount())
            {
                
        for(int i=0;i<jTable2.getRowCount();i++)
                {
                    try {
                        String prod_name=jTable2.getValueAt(i,0).toString();
                       String brand=jTable2.getValueAt(i,1).toString();
                        //Object sp=jTable2.getValueAt(i,4);
                        Object min=jTable2.getValueAt(i,2);
                        String str="update inventory set min_level="+min+" where product_name='"+prod_name+"'";
                        Statement st111=con.createStatement();
                        st111.executeUpdate(str);
                        
                    }
                    
                    catch (SQLException ex) {
                        Logger.getLogger(order_recieved.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
             JOptionPane.showMessageDialog(rootPane, "Updated!");
              model2.setRowCount(0);
           //  try {
      //  model2.setRowCount(0);
      /*  String[] col_list11={"Product name","Brand","Minimum Value"};
        String str="select `product_name`, `brand`,`min_level` from inventory";
        Statement st=con.createStatement();
        ResultSet r=st.executeQuery(str);
        
       
         
    model2.setColumnIdentifiers(col_list11);
        while(r.next())
        {
             int col_count=col_list11.length;
            Object[] new_row=new Object[col_count];
            for(int i=0;i<col_count;i++)
            {
                new_row[i]=r.getObject(i+1);
              
        }
            model2.addRow(new_row);
           
           jTable2.setRowSelectionAllowed(false);  
        }
        
    } catch (SQLException ex) {
        Logger.getLogger(stock1.class.getName()).log(Level.SEVERE, null, ex);}
        
            }*/
            
            }
            else
            {
              JOptionPane.showMessageDialog(rootPane,"Enter all the values");  
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
         jComboBox2.removeAllItems();
        jComboBox2.addItem("-Select-");
        try
{
String str12="select brand from p_brand where product_name='"+jComboBox1.getSelectedItem().toString()+"'";
                Statement st=con.createStatement();
                ResultSet re=st.executeQuery(str12);
        while(re.next())
        {
            jComboBox2.addItem(re.getString("brand"));
        }
                
            }
            
            catch (SQLException ex) {
                Logger.getLogger(supplier.class.getName()).log(Level.SEVERE, null,ex);
                
            }

    }//GEN-LAST:event_jComboBox1ItemStateChanged





    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
